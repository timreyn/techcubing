syntax = "proto3";

package techcubing;

option java_package = "com.techcubing.proto";
option java_outer_classname = "ScorecardProto";

import "google/protobuf/timestamp.proto";
import "src/main/java/com/techcubing/proto/device_type.proto";
import "src/main/java/com/techcubing/proto/options.proto";

// Something that happened during an event.
enum EventCode {
  UNKNOWN_EVENT = 0;
  SCRAMBLE_ACQUIRED = 1;
  SCRAMBLE_RELEASED = 2;
  JUDGE_ACQUIRED = 3;
  INSPECTION_STARTED = 4;
  INSPECTION_ENDED = 5;
  SOLVE_ENDED = 6;
  JUDGE_RELEASED = 7;
}
message AttemptEvent {
  EventCode code = 1;
  google.protobuf.Timestamp timestamp = 2;
}

// The result of an AttemptPart.  If result is not OK, another device of the
// same type must acquire this scorecard next.
enum AttemptPartOutcome {
  UNKNOWN = 0;
  OK = 1;
  MISSCRAMBLE = 2;
}

// The result of an attempt.
message AttemptResult {
  uint64 final_time = 1;
  bool is_dnf = 2;

  // TODO: define schema for penalty information.
}

// Part of an event, corresponding to one device has acquired the scorecard.
message AttemptPart {
  DeviceType device_type = 1;

  string person_id = 2 [
    (techcubing.message_type) = "techcubing.wcif.WcifPerson"
  ];
  string device_id = 3 [
    (techcubing.message_type) = "techcubing.Device"
  ];

  repeated AttemptEvent events = 5;

  AttemptPartOutcome outcome = 6;
}

message Attempt {
  AttemptResult result = 1;

  repeated AttemptPart parts = 2;

  // TODO: define schema for extra attempts.
}

message Scorecard {
  option (techcubing.mysql_table_name) = "Scorecard";

  string id = 1 [(techcubing.primary_key) = true];

  string person_id = 2 [
    (techcubing.message_type) = "techcubing.wcif.WcifPerson",
    (techcubing.mysql_column_name) = "person_id"
  ];

  string round_id = 3 [
    (techcubing.message_type) = "techcubing.wcif.WcifRound",
    (techcubing.mysql_column_name) = "round_id"
  ];

  string active_device_id = 6 [
    (techcubing.message_type) = "techcubing.Device",
    (techcubing.mysql_column_name) = "active_device_id"
  ];

  repeated Attempt attempts = 4;

  bool deleted = 5;
}
